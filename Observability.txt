~~~~~~~~~~~~~~~~~~`what is the difference betwwen the metrics , logs and trace give me one examople with payment service?~~~~~~~~~~~~~~~~~~~``


metrics: what is cpu, mem, error time, https request count in th form of numerical data 
logs - humab readable format with timestammp it will show . full journey flow will show
trcaes- it will show like logs but its debugging inosde service, like services is calling to anothere services that how much time take take responf=d , what is the latency, bootlenecks so we can find entire thing : koging fframework : set teh error, trace, info, debug like .


Metrics measure the overall health and performance of a system with numerical data points collected over time (e.g., CPU usage, request rates, error counts). They answer what is happening and serve well for alerting and identifying trends because they are compact and aggregated.

Logs provide a detailed, timestamped record of discrete events and activities within the system. Logs help understand why something happened by offering contextual, human-readable data for troubleshooting specific issues.

Traces show the journey of a request or transaction through multiple components or services, giving insight into the exact where and how in the flow of operations, enabling identification of bottlenecks or failures in complex systems.

Example with a Payment Service
Imagine a payment service handling online payments:

Metric: The total number of payment transactions processed successfully per minute, or the rate of payment failures. (Shows what is going on, e.g., “Payment failure rate increased to 5%.”)

Trace: A distributed trace follows a single payment request from the API gateway through authentication, payment processing, and confirmation services, showing delays or errors in any step. (Shows where the failure or slow down occurred in the payment flow.)

Log: Detailed log entries record the error messages when a payment transaction fails, such as timeout errors from the payment gateway or invalid card details logged during that specific payment attempt. (Shows why the payment failed.)

~~~~~~~~~~~~~~~~~~~~~~waht kind of metrics we used in the rela tie~~~~~~~~~~~~~~~~~~~~````
infrasture related liek cpu, memory and other
2. kuberenet worker componets, kublele
docker and kuberenets 
microseices like - claiim serives and payment service
kafa related like kafka count insted of Queues (producer and consumer ) 


~~~~~~~~~~~~~monitoring and observability~~~~~~~~~~~``````
monitor: what happened to sysyem (red/ yello things in the dashboard how promoquery running beyond that)
like what issue server ran out of cpu, memory 

bservability: we can check ober here like how we can check the issue, why the cpu is crossed or disk space reached 85%

~~~~~~~~~~~~~``````how you custom logs and netrics applictaion~~~~~~~~~~~~~~~~```````
by default some of teh logs will not come by default like : we can get the id or json for CPU, memory and diskspace/
ex: i wan to count of payment docne, paynet failure from paymnet service in ine day 
- so need to collabarate with developmnet team , developer add teh cgauge counter metrics in there application so its can scare the payment count based one request and send to dashboard.

~~~~~~~~~~~~~~~~~~~~~~~~~have you worked with observability ~~~~~~~~~~~~~~~~~~~~~``
yes payment service is going down due to high request 
- collabarate with developent team , set teh error(info/debug,debug) in log4j (logging framework for java) so that we can get all logs 
- so that i check the logs and traces to get deep understand the floe like what happening inside service is there any bcakend services error like latency or bottleneck issue.

~~~~~~~~~~~~~~~~~~~~~~`push based and pull based monitoirng~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scrape metrics from /metrics 
/node 

target sends data to collector : push based 
pull basded : prometheoues scare or pull metrics from traget (in node we mention nodeexporter- cpu,memoru, loki for logs, forv travve - )
pull based in prometheous.yaml we mention the all target machine ips and port under scare_config fiel so that  it will pull)
push based : ex: telgreaf 

like ansibke is : push basd mechanisume 
check and puppet : pull based mechanisume (agent should be running on each server)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`which tools  used to build your observabity stack~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
for metrics:
prometheous: 9001 - for pull based, as datasource -timeseries datsource using for scarping matrics
grafana - for visulaztion data over here like dahboard (graph, columns, pie charts  - define  the alert (prometheous alert manager) for alert 
logs - ELK stack (elastic ) for visulation we can use the kibana dashboard
traces - we are using teh eager 
opentelmetery - developer using teh opentelmetry for instrumnet metrics (example gauge counter to count te paymemnt )
