~~~~~~~~~~~~~~~~~~~~~~~`commands: How the flow in the github~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1. Fork the Repo
Go to the repo you want to fork, e.g.
👉 https://github.com/devops-by-examples/Shell

GitHub will create a copy under your account like:
https://github.com/arunchincholi/Shell

git clone https://github.com/arunchincholi/Shell.git
cd Shell
git remote -v
git checkout -b feature-mycode
echo "This is my test script" > test.sh
git add test.sh
git commit -m "Add test.sh with basic script content"
git push origin feature-mycode

7. Create a Pull Request (PR)
Go to your fork:
👉 https://github.com/arunchincholi/Shell

You’ll see a “Compare & pull request” button. Click it.

Add:

Title: Added test.sh file
Description: what this change does
Click “Create pull request”
==================================================================================================================
~~~~~~~~~~~~~~~~~~how to authetiacte with https and shh~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

https:#######################################
git clone https://github.com/username/repo.git
username and persoanl access token 

Settings
Developer Settings
Personal access tokens (classic)
---store temproraly:
git config --global credential.helper store

ssh:################################################
craete ssh-kegen >it will create public key 
paste in the github
Go to GitHub → Settings → SSH and GPG keys
Click "New SSH key", paste the key and save.

============================================================================================================================

git featch and git pull 
git branch -a
remote + lpocal
-r only remote 
git merger <url_rmeote>
git merge remotes/origin/arunfetatchre
git featch origin <name of branch>
----------------------------
git cherry pick - take only some changes and merger intlinere commit hosory - done by rebase (o your repository .
git merge and git rebase :
Linear ommit history done by - rebase (i am in featchure brach 20 commit >git rebase origin main so first main 50 commit and then 20 commit of that feture branch)
cronological commit added  : yypu will see all commit based on tha date (history what they are created)
where? - git log (here based on time -merge  descinding.) 

git merge: combined twoo branches and create new merge commmit. - based on timestamp full history- crnological order.- not serial 
git rebase : linier commit histry, move the branch commits on top of another branch .




